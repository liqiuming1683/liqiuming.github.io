<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Arduino开源机械臂]]></title>
    <url>%2F2017%2F07%2F11%2FArduino%E5%BC%80%E6%BA%90%E6%9C%BA%E6%A2%B0%E8%87%82%2F</url>
    <content type="text"><![CDATA[#项目说明整体目标是基于Arduino设计能用手机控制的机械臂。 项目可拆分为下面四部分进行： 参考ABB IRB760工业码垛机械臂，且为降低制作成本，设计不需利用3D打印技术而只是用亚克力板和棒即可制作的桌面级机械臂； 测试Arduino控制四个舵机的代码，通过舵机实现对机械臂的控制； 通过手机控制可选的无线通信方案有：BLE，WiFi等，这里先选择BLE，选用HC-05蓝牙芯片，用手机对Arduino发送指令控制舵机； 组装机械臂调试。 #Process ##Part1 ABB IRB760工业码垛机械臂即如下图所示 据此自行设计的机械臂已上传至MOST3D，效果如下图 SolidWorks文件已上传至百度文档可以下载查看 ##part2测试Arduino控制舵机的代码，通过舵机实现对机械臂的控制； 测试时用电位器调节舵机的旋转位置； /* * date: 2017/07/06 * author: liqiuming * requirement statement: * firstly, test servo SG90 in mega2560 * then use Potentiometer as a input source to control servo MG995 */ #include &lt;Servo.h&gt; Servo MG995; int posServo = 0;//position of servo int pinPotentiometer = A1; void setup() { // put your setup code here, to run once: MG995.attach(2); pinMode(pinPotentiometer,INPUT); } void loop() { // put your main code here, to run repeatedly: int val = analogRead(pinPotentiometer); int valForServo = map(val,0,1024,0,180); MG995.write(valForServo); } ##Part3 测试HC-05蓝牙芯片：使用的Arduino开发板型号是mega2560HC-05与mega2560的连接方式是： 将HC-05的TX引脚与mega2560RX引脚（0）相连，HC-05的RX引脚置空，因为不需要把数据从开发板发送到手机； 将HC-05接入电源，用手机连接蓝牙，配对密码为1234； 用手机发送指令控制舵机转动角度测试：手机每发送“0”时，舵机的角度增加5度；每发送“1”时，舵机角度减小5度。 /* * date:2017/07/07 * author：liqiuming * requirement statement: * test BLE module HC-05 with cellphone * meanwhile we need test 4 servos at the same time */ #include &lt;Servo.h&gt; // 4 Servos are used, 3 are MG995 and 1 is SG90 Servo MG995A; Servo MG995B; Servo MG995C; Servo SG90D; //initial positions of all Servo are 0 degree int posServoA= 0; int posServoB= 0; int posServoC= 0; int posServoD= 0; void setup() { // put your setup code here, to run once: Serial.begin(9600); MG995A.attach(2); MG995B.attach(3); MG995C.attach(4); SG90D.attach(5); } void loop() { // put your main code here, to run repeatedly: if(Serial.available()&gt;0){ char ch = Serial.read(); switch(ch){ case &apos;0&apos;: angleUpA();//发送“0”，MG995A角度增加5度； break; case &apos;1&apos;: angleDownA();//发送“1”，MG995A角度减少5度； break; case &apos;2&apos;: angleUpB();//发送“2”，MG995B角度增加5度； break; case &apos;3&apos;: angleDownB();//发送“3”，MG995B角度减少5度； break; case &apos;4&apos;: angleUpC();//发送“4”，MG995C角度增加5度； break; case &apos;5&apos;: angleDownC();//发送“5”，MG995C角度减少5度； break; case &apos;6&apos;: angleUpD();//发送“6”，MG995D角度增加5度； break; case &apos;7&apos;: angleDownD();//发送“7”，MG995D角度减少5度； break; } } } //below are the functions to increase or decrease each Servo&apos;s degrees //functions to control MG995A void angleUpA(){ posServoA += 5; MG995A.write(posServoA); Serial.print(&quot;MG995A&apos;s angle(°) is &quot;); Serial.println(posServoA); } void angleDownA(){ posServoA -= 5; MG995A.write(posServoA); Serial.print(&quot;MG995A&apos;s angle(°) is &quot;); Serial.println(posServoA); } //functions to control MG995B void angleUpB(){ posServoB += 5; MG995B.write(posServoB); Serial.print(&quot;MG995B&apos;s angle(°) is &quot;); Serial.println(posServoB); } void angleDownB(){ posServoB -= 5; MG995B.write(posServoB); Serial.print(&quot;MG995B&apos;s angle(°) is &quot;); Serial.println(posServoB); } //functions to control MG995C void angleUpC(){ posServoC += 5; MG995C.write(posServoC); Serial.print(&quot;MG995C&apos;s angle(°) is &quot;); Serial.println(posServoC); } void angleDownC(){ posServoC -= 5; MG995C.write(posServoC); Serial.print(&quot;MG995C&apos;s angle(°) is &quot;); Serial.println(posServoC); } //functions to control SG90D void angleUpD(){ posServoD += 5; SG90D.write(posServoD); Serial.print(&quot;SG90D&apos;s angle(°) is &quot;); Serial.println(posServoD); } void angleDownD(){ posServoD -= 5; SG90D.write(posServoD); Serial.print(&quot;SG90D&apos;s angle(°) is &quot;); Serial.println(posServoD); } ##Part4 组装进行机械臂调试]]></content>
  </entry>
  <entry>
    <title><![CDATA[基于Arduino的转子压敏荧光图像采集系统的同步触发装置设计]]></title>
    <url>%2F2017%2F07%2F10%2F%E5%9F%BA%E4%BA%8EArduino%E7%9A%84%E8%BD%AC%E5%AD%90%E5%8E%8B%E6%95%8F%E8%8D%A7%E5%85%89%E5%9B%BE%E5%83%8F%E9%87%87%E9%9B%86%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%90%8C%E6%AD%A5%E8%A7%A6%E5%8F%91%E8%A3%85%E7%BD%AE%E8%AE%BE%E8%AE%A1%2F</url>
    <content type="text"><![CDATA[这是我本科毕业设计的内容，我会尽量简洁易懂地将其叙述出来。]]></content>
  </entry>
  <entry>
    <title><![CDATA[李秋铭的测试文章]]></title>
    <url>%2F2017%2F07%2F10%2F%E6%9D%8E%E7%A7%8B%E9%93%AD%E7%9A%84%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[这是一篇测试文章，欢迎关注作者博客[1]：http：//liqiuming1683.github.io/]]></content>
  </entry>
</search>